.\" Text automatically generated by md2man 
.TH tmww-mbuzzer 1 "November 28, 2014" "Linux" "Linux Reference Manual"
.SH NAME
\fBmbuzzer \fP- bot suit notification interface
.PP
.SH USAGE
.TP
.B
\fB-t\fP STRING
-- send event of STRING type
.TP
.B
\fB-f\fP FILE
-- send file as event
.TP
.B
\fB-b\fP STRING
-- send speach to festival
.TP
.B
\fB-i\fP
-- ignore abandoned socket
.TP
.B
\fB-n\fP STRING
-- send notification string
{ start | status | stop } -- operate listening server
.PP
.SH DESCRIPTION
mbuzzer depends on socat and jq.
.PP
mbuzzer does not rely on tmww to work. "start"/"stop" options control listening
server. This way you can pass sound/popup notifications from remote box.
.PP
With \fB-t\fP , \fB-f\fP or \fB-b\fP mbuzzer simply writes JSON line to unix domain socket.
.PP
Notification line may take several special sequences (same as \fBtmww-notify\fP(1) ):
.TP
.B
%t
notification title
.TP
.B
%b
message body
.PP
.SH BUGS
Cannot get socat to work properly:
.PP
.nf
.fam C
    # faulty
    $ ( socat 'unix-listen:test.sock,reuseaddr,fork' - | while read line; do echo 123 $line; done )&
    $ for i in $(seq 1 10); do echo $i; sleep 1; done | socat - 'unix-connect:test.sock'
    # desired
    $ socat 'unix-listen:test.sock,reuseaddr,fork' - | while read line; do echo 123 $line; done
    $ for i in $(seq 1 10); do echo $i; sleep 1; done | socat - 'unix-connect:test.sock'
.fam T
.fi
.PP
.SH EXAMPLE
.SS asoundrc
Example .asoundrc taken using alsaequal (based on source from
http://mpd.wikia.com/wiki/Alsa):
.PP
.nf
.fam C
    # the sound card
    pcm.real {
        type hw
        card 0
        device 0
    }
.fam T
.fi
.PP
.nf
.fam C
    # the ipc stuff is needed for permissions, etc.
    pcm.dmixer {
        type dmix
        ipc_key 1024
        ipc_perm 0666
        slave.pcm "real"
        slave {
            period_time 0
            period_size 1024
            buffer_size 8192
            rate 44100  
        }
        bindings {
            0 0
            1 1 
        }
    }
.fam T
.fi
.PP
.nf
.fam C
    ctl.dmixer {
        type hw
        card 0
    }
.fam T
.fi
.PP
.nf
.fam C
    ctl.equal {
        type equal
    }
.fam T
.fi
.PP
.nf
.fam C
    pcm.plugequal {
        type equal
        slave.pcm "plug:dmixer"
    }
.fam T
.fi
.PP
.nf
.fam C
    pcm.preequal {
        type plug
        slave.pcm "plugequal"
    }
.fam T
.fi
.PP
.nf
.fam C
    # software volume
    pcm.softvol {
        type softvol
    #   slave.pcm "preequal"
        slave.pcm "dmixer"
        control {
            name "Software"
            card 0
        }
    }
.fam T
.fi
.PP
.nf
.fam C
    # mana volume control
    pcm.manavol {
        type softvol
        slave.pcm "dmixer"
        control {
            name "Mana"
            card 0
        }
    }
.fam T
.fi
.PP
.nf
.fam C
    # ctrl for mpd volume
    ctl.manavol {
        type hw
        card 0
    }
.fam T
.fi
.PP
.nf
.fam C
    # music volume control
    pcm.musicvol {
        type softvol
        slave.pcm "preequal"
    #   slave.pcm "dmixer"
        control {
            name "Music"
            card 0
      }
    }
.fam T
.fi
.PP
.nf
.fam C
    # ctrl for music volume
    ctl.musicvol {
        type hw
        card 0
    }
.fam T
.fi
.PP
.nf
.fam C
    # input
    pcm.input {
        type dsnoop
        ipc_key 3129398
        ipc_key_add_uid false
        ipc_perm 0660
        slave.pcm "810"
    }
.fam T
.fi
.PP
.nf
.fam C
    # duplex device
    pcm.duplex {
        type asym
        playback.pcm "softvol"
        capture.pcm "input"
    }
.fam T
.fi
.PP
.nf
.fam C
    # default device
    pcm.!default {
        type route
        slave {
            pcm "duplex"
            channels 2
        }
        ttable {
            0.0 1
            1.1 1
        }
    }
.fam T
.fi
.SS festivalrc
Looks like something is lacking in shown .asoundrc so:
.PP
.nf
.fam C
    (Parameter.set 'Audio_Command "aplay -Dplug:default -q -f S16_LE -r $SR $FILE")
.fam T
.fi
.PP
.SH EXAMPLE
See example_config.conf in distribution.
.PP
.SH COPYRIGHT
This document is part of tmww - The Mana World Watcher scripts.
.PP
Licensed under terms of GNU General Public License version 3. For full text of
license see COPYING file distributed with tmww.
.PP
.SH AUTHORS
willee <v4r@trioptimum.com>, 2012-2014
.PP
.SH SEE ALSO
\fBtmww\fP(1), \fBtmww-plugin\fP(7), \fBtmww-mbuzzer\fP(1), \fBsocat\fP(1), \fBdunst\fP(1)
